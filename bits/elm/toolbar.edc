group { name: "elm/toolbar/base/default";
	parts {
		part { name: "base";
			description { state: "default" 0.0;
				image {
					normal: "images/menubar.png";
					border: 0 0 1 1;
				}
				color_class: "dialog_base";
			}
		}
		part { name: "clipper"; type: RECT;
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1 {
					to: "base";
					offset: 2 2;
				}
				rel2 {
					to: "base";
					offset: -3 -3;
				}
			}
		}
		part { name: "elm.swallow.content"; type: SWALLOW;
			clip_to: "clipper";
			type: SWALLOW;
			description {
				state: "default" 0.0;
				rel1.to: "clipper";
				rel2.to: "clipper";
			}
		}
		part { name: "arrow_clipper_l"; type: RECT;
			description { state: "default" 0.0;
				visible: 0;
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part { name: "arrow_l"; mouse_events: 0;
			clip_to: "arrow_clipper_l";
			description { state: "default" 0.0;
				rel1.to: "arrow_l_ev";
				rel2.to: "arrow_l_ev";
				image.normal: "images/scrollbar_im6.png";
				min: 13 17;
				max: 13 17;
				fixed: 1 1;
				color_class: "fileman_arrow";
			}
			description { state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 255;
			}
		}
		part { name: "arrow_l_ev"; type: RECT;
			scale: 1;
			clip_to: "arrow_clipper_l";
			description { state: "default" 0.0;
				rel1.to: "clipper";
				rel2.to: "clipper";
				align: 0.0 0.5;
				color: 0 0 0 0;
				min: 18 18;
				max: 18 18;
				fixed: 1 1;
			}
		}
		part { name: "arrow_clipper_r"; type: RECT;
			description { state: "default" 0.0;
				visible: 0;
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part { name: "arrow_r"; mouse_events: 0;
			clip_to: "arrow_clipper_r";
			description { state: "default" 0.0;
				rel1.to: "arrow_r_ev";
				rel2.to: "arrow_r_ev";
				image.normal: "images/scrollbar_im7.png";
				min: 13 17;
				max: 13 17;
				fixed: 1 1;
				color_class: "fileman_arrow";
			}
			description { state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 255;
			}
		}
		part { name: "arrow_r_ev"; type: RECT;
			scale: 1;
			clip_to: "arrow_clipper_r";
			description { state: "default" 0.0;
				rel1.to: "clipper";
				rel2.to: "clipper";
				align: 1.0 0.5;
				color: 0 0 0 0;
				min: 18 18;
				max: 18 18;
				fixed: 1 1;
			}
		}
		part { name: "arrow_clipper_u"; type: RECT;
			description { state: "default" 0.0;
				visible: 0;
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part { name: "arrow_u"; mouse_events: 0;
			clip_to: "arrow_clipper_u";
			description { state: "default" 0.0;
				rel1.to: "arrow_u_ev";
				rel2.to: "arrow_u_ev";
				image.normal: "images/scrollbar_im8.png";
				min: 17 13;
				max: 17 13;
				fixed: 1 1;
				color_class: "fileman_arrow";
			}
			description { state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 255;
			}
		}
		part { name: "arrow_u_ev"; type: RECT;
			scale: 1;
			clip_to: "arrow_clipper_u";
			description { state: "default" 0.0;
				rel1.to: "base";
				rel2.to: "base";
				align: 0.5 0.0;
				color: 0 0 0 0;
				min: 18 18;
				max: 18 18;
				fixed: 1 1;
			}
		}
		part { name: "arrow_clipper_d"; type: RECT;
			description { state: "default" 0.0;
				visible: 0;
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part { name: "arrow_d"; mouse_events: 0;
			clip_to: "arrow_clipper_d";
			description { state: "default" 0.0;
				rel1.to: "arrow_d_ev";
				rel2.to: "arrow_d_ev";
				image.normal: "images/scrollbar_im9.png";
				min: 17 13;
				max: 17 13;
				fixed: 1 1;
				color_class: "fileman_arrow";
			}
			description { state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 255;
			}
		}
		part { name: "arrow_d_ev"; type: RECT;
			scale: 1;
			clip_to: "arrow_clipper_d";
			description { state: "default" 0.0;
				rel1.to: "base";
				rel2.to: "base";
				align: 0.5 1.0;
				color: 0 0 0 0;
				min: 18 18;
				max: 18 18;
				fixed: 1 1;
			}
		}
	}
	programs {
		program {
			signal: "elm,action,show,left"; source: "elm";
			action: STATE_SET "visible" 0.0;
			target: "arrow_clipper_l";
			target: "arrow_clipper_l";
		}
		program {
			signal: "elm,action,hide,left"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "arrow_clipper_l";
			target: "arrow_clipper_l";
		}
		program {
			signal: "mouse,down,1*"; source: "arrow_l_ev";
			action: SIGNAL_EMIT "elm,action,left" "elm";
			after: "arrow_l_repeat";
		}
		program { name: "arrow_l_repeat";
			action: SIGNAL_EMIT "elm,action,left" "elm";
			in: 0.3 0.0;
			after: "arrow_l_repeat";
		}
		program {
			signal: "mouse,up,1"; source: "arrow_l_ev";
			action: ACTION_STOP;
			target: "arrow_l_repeat";
		}
		program {
			signal: "mouse,down,1*"; source: "arrow_l_ev";
			action: STATE_SET "clicked" 0.0;
			target: "arrow_l";
		}
		program {
			signal: "mouse,up,1"; source: "arrow_l_ev";
			action: STATE_SET "default" 0.0;
			target: "arrow_l";
		}
		program {
			signal: "elm,action,show,right"; source: "elm";
			action: STATE_SET "visible" 0.0;
			target: "arrow_clipper_r";
			target: "arrow_clipper_r";
		}
		program {
			signal: "elm,action,hide,right"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "arrow_clipper_r";
			target: "arrow_clipper_r";
		}
		program {
			signal: "mouse,down,1*"; source: "arrow_r_ev";
			action: SIGNAL_EMIT "elm,action,right" "elm";
			after: "arrow_r_repeat";
		}
		program { name: "arrow_r_repeat";
			action: SIGNAL_EMIT "elm,action,right" "elm";
			in: 0.3 0.0;
			after: "arrow_r_repeat";
		}
		program {
			signal: "mouse,up,1"; source: "arrow_r_ev";
			action: ACTION_STOP;
			target: "arrow_r_repeat";
		}
		program {
			signal: "mouse,down,1*"; source: "arrow_r_ev";
			action: STATE_SET "clicked" 0.0;
			target: "arrow_r";
		}
		program {
			signal: "mouse,up,1"; source: "arrow_r_ev";
			action: STATE_SET "default" 0.0;
			target: "arrow_r";
		}
		program {
			signal: "elm,action,show,up"; source: "elm";
			action: STATE_SET "visible" 0.0;
			target: "arrow_clipper_u";
			target: "arrow_clipper_u";
		}
		program {
			signal: "elm,action,hide,up"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "arrow_clipper_u";
			target: "arrow_clipper_u";
		}
		program {
			signal: "mouse,down,1*"; source: "arrow_u_ev";
			action: SIGNAL_EMIT "elm,action,up" "elm";
			after: "arrow_u_repeat";
		}
		program { name: "arrow_u_repeat";
			action: SIGNAL_EMIT "elm,action,up" "elm";
			in: 0.3 0.0;
			after: "arrow_u_repeat";
		}
		program {
			signal: "mouse,up,1"; source: "arrow_u_ev";
			action: ACTION_STOP;
			target: "arrow_u_repeat";
		}
		program {
			signal: "mouse,down,1*"; source: "arrow_u_ev";
			action: STATE_SET "clicked" 0.0;
			target: "arrow_u";
		}
		program {
			signal: "mouse,up,1"; source: "arrow_u_ev";
			action: STATE_SET "default" 0.0;
			target: "arrow_u";
		}
		program {
			signal: "elm,action,show,down"; source: "elm";
			action: STATE_SET "visible" 0.0;
			target: "arrow_clipper_d";
			target: "arrow_clipper_d";
		}
		program {
			signal: "elm,action,hide,down"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "arrow_clipper_d";
			target: "arrow_clipper_d";
		}
		program {
			signal: "mouse,down,1*"; source: "arrow_d_ev";
			action: SIGNAL_EMIT "elm,action,down" "elm";
			after: "arrow_d_repeat";
		}
		program { name: "arrow_d_repeat";
			action: SIGNAL_EMIT "elm,action,down" "elm";
			in: 0.3 0.0;
			after: "arrow_d_repeat";
		}
		program {
			signal: "mouse,up,1"; source: "arrow_d_ev";
			action: ACTION_STOP;
			target: "arrow_d_repeat";
		}
		program {
			signal: "mouse,down,1*"; source: "arrow_d_ev";
			action: STATE_SET "clicked" 0.0;
			target: "arrow_d";
		}
		program {
			signal: "mouse,up,1"; source: "arrow_d_ev";
			action: STATE_SET "default" 0.0;
			target: "arrow_d";
		}
	}
}

group { name: "elm/toolbar/item/default";
	images {
		image: "images/elm/toolbar_sel.png" COMP;
	}
	data.item: "transition_animation_on" "1";
	
	#define ICON     1
	#define LABEL    2
	#define MASK     3
	#define DISABLE  4
	script {   
      public btmode;
      public eval_mode(m) {
         new m1 = m & MASK;
         new d = m & DISABLE;
         if (m1 == (ICON | LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.icon", "default", 0.0);
               set_state(PART:"elm.icon.clipper", "default", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.icon", "default", 0.0);
               set_state(PART:"elm.icon.clipper", "disabled", 0.0);
               set_state(PART:"elm.text", "disabled", 0.0);
            }
         } else if (m1 == (ICON)) {
            if (!d) {
               set_state(PART:"elm.swallow.icon", "icononly", 0.0);
               set_state(PART:"elm.icon.clipper", "default", 0.0);
               set_state(PART:"elm.text", "icononly", 0.0);
            } else {
               set_state(PART:"elm.swallow.icon", "icononly", 0.0);
               set_state(PART:"elm.icon.clipper", "disabled", 0.0);
               set_state(PART:"elm.text", "icononly", 0.0);
            }
         } else if (m1 == (LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.icon", "noicon", 0.0);
               set_state(PART:"elm.icon.clipper", "default", 0.0);
               set_state(PART:"elm.text", "noicon", 0.0);
            } else {
               set_state(PART:"elm.swallow.icon", "noicon", 0.0);
               set_state(PART:"elm.icon.clipper", "disabled", 0.0);
               set_state(PART:"elm.text", "noicon_disabled", 0.0);
            }
         } else {
			if (!d) {
				set_state(PART:"elm.swallow.icon", "noicon", 0.0);
				set_state(PART:"elm.icon.clipper", "default", 0.0);
				set_state(PART:"elm.text", "noicon", 0.0);
			} else {
				set_state(PART:"elm.swallow.icon", "noicon", 0.0);
				set_state(PART:"elm.icon.clipper", "disabled", 0.0);
				set_state(PART:"elm.text", "noicon_disabled", 0.0);
			}
         }
      }
   }
   
	parts {
		part { name: "bg";
			mouse_events: 0;
			description { state: "default" 0.0;
				visible: 0;
				color: 255 255 255 0;
				image {
					normal: "images/elm/menu_im2.png";
					border: 5 5 5 5;
				}
				image.middle: SOLID;
				fill.smooth: 0;
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				color: 255 255 255 255;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 0;
				color: 255 255 255 0;
			}
		}
		part { name: "bg2";
			mouse_events: 0;
			description { state: "default" 0.0;
				visible: 0;
				color: 255 255 255 0;
				rel1.offset: -3 -3;
				rel2.offset: 2 2;				
				image {
					normal: "images/button_im4.png";
					border: 7 7 7 7;
				}
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				color: 255 255 255 255;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 0;
				color: 255 255 255 0;
			}
		}
		part { name: "bg3";
			mouse_events: 0;
			description { state: "default" 0.0;
				visible: 0;
				color: 255 255 255 0;
				rel1.offset: -3 -3;
				rel2.offset: 2 2;				
				image {
					normal: "images/button_im7.png";
					border: 7 7 7 7;
				}
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				color: 255 255 255 255;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 0;
				color: 255 255 255 0;
			}
		}
		part { name: "elm.swallow.icon";
			type: SWALLOW;
			clip_to: "elm.icon.clipper";
			description { state: "default" 0.0;
				align: 0.5 0.5;
				fixed: 0 0;
				rel1 {
					relative: 0.0 0.0;
					offset: 2 4;
				}
				rel2 {
					to_y: "text_spacer";
					relative: 1.0 0.0;
					offset: -3 -5;
				}
				color: 0 0 0 0;
			}
		}
		part { name: "elm.swallow.icon_new";
			type: SWALLOW;
			clip_to: "elm.icon_new.clipper";
			description { state: "default" 0.0;
				align: 0.5 0.5;
				fixed: 0 0;
				rel1 {
					relative: 0.0 0.0;
					offset: 2 4;
				}
				rel2 {
					to_y: "text_spacer";
					relative: 1.0 0.0;
					offset: -3 -5;
				}
				color: 0 0 0 0;
			}
		}

		/* changing text fucks up size calc without this icon or text disappear...*/
		part { name: "text_spacer";
			type: TEXT;
			effect: SHADOW;
			mouse_events:  0;
			description { state: "default" 0.0;
				align: 0.5 1.0;
				color: 0 0 0 0;
				color3: 0 0 0 0;
				rel1 {
					relative: 0.0 0.0;
					offset:   5 -1;
				}
				rel2 {
					relative: 1.0 1.0;
					offset:   -6 -6;
				}
				TEXT_BUTTON("toolbar_item", "ARGH", 0.5 0.5, 1 1);
				text.max: 0 1;
				text.ellipsis: -1;
			}
		}
				
		part { name: "elm.text";
			type: TEXT;
			effect: SHADOW;
			mouse_events:  0;
			/* scale: 1; */
			clip_to: "elm.text.clipper";
			description { state: "default" 0.0;
				align: 0.5 0.0;
				fixed: 0 0;
				rel1.to: "text_spacer";
				rel2.to: "text_spacer";
				TEXT_COLOR;			
				TEXT_BUTTON("toolbar_item", "", 0.5 0.5, 1 1);
				text.ellipsis: -1;
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 128;
				color3: 0 0 0 0;
			}
			description { state: "disabled_visible" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 128;
				color3: 0 0 0 0;
			}
		}
		part { name: "elm.text_new";
			type: TEXT;
			effect: SHADOW;
			mouse_events:  0;
			clip_to: "elm.text_new.clipper";
			/* scale: 1; */
			description { state: "default" 0.0;
				align: 0.5 0.0;
				fixed: 0 0;
				rel1.to: "text_spacer";
				rel2.to: "text_spacer";
				color: 224 224 224 255;
				color3: 0 0 0 32;
				TEXT_BUTTON("toolbar_item", "", 0.5 0.5, 1 1);
				text.ellipsis: -1;
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 128;
				color3: 0 0 0 0;
			}
			description { state: "disabled_visible" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 128;
				color3: 0 0 0 0;
			}
		}

		part { name: "elm.text.clipper";
			type: RECT;
			description { state: "default" 0.0;
				color: 255 255 255 255;
			}
			description { state: "animation" 0.0;
				color: 255 255 255 0;
			}
		}
		part { name: "elm.text_new.clipper";
			type: RECT;
			description { state: "default" 0.0;
				color: 255 255 255 0;
			}
			description { state: "animation" 0.0;
				color: 255 255 255 255;
			}
		}
		part { name: "elm.icon.clipper";
			type: RECT;
			description { state: "default" 0.0;
				color: 255 255 255 255;
			}
			description { state: "animation" 0.0;
				color: 255 255 255 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 64;
			}
		}
		part { name: "elm.icon_new.clipper";
			type: RECT;
			description { state: "default" 0.0;
				color: 255 255 255 0;
			}
			description { state: "animation" 0.0;
				color: 255 255 255 255;
			}
		}
		part { name: "event";
			type: RECT;
			mouse_events: 1;
			ignore_flags: ON_HOLD;
			description { state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
	}
	programs {
		program { name: "go_active";
			signal:  "elm,state,selected";
			source:  "elm";
			action:  STATE_SET "selected" 0.0;
			target:  "bg";
			target:  "bg2";
			target:  "bg3";
			target:  "elm.text";
			target:  "elm.text_new";
			transition: LINEAR 0.2;
		}
		program { name: "go_passive";
			signal:  "elm,state,unselected";
			source:  "elm";
			action:  STATE_SET "default" 0.0;
			target:  "bg";
			target:  "bg2";
			target:  "bg3";
			target:  "elm.text";
			target:  "elm.text_new";
			transition: LINEAR 0.1;
		}
		program { name: "go";
			signal:  "mouse,up,1";
			source:  "event";
			action:  SIGNAL_EMIT "elm,action,click" "elm";
		}
		program { name: "mouse,in";
			signal:  "mouse,in";
			source:  "event";
			action:  SIGNAL_EMIT "elm,mouse,in" "elm";
		}
		program { name: "mouse,out";
			signal:  "mouse,out";
			source:  "event";
			action:  SIGNAL_EMIT "elm,mouse,out" "elm";
		}
		program { name: "disable";
			signal: "elm,state,disabled";
			source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "bg";
			target:  "bg2";
			target:  "bg3";
			after: "disable_text";
		}
		program { name: "disable_text";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.text", st, 30, vl);
				if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.text", "disabled_visible", 0.0);
						set_state(PART:"elm.text_new", "disabled_visible", 0.0);
					}
				else
					{
						set_state(PART:"elm.text", "disabled", 0.0);
						set_state(PART:"elm.text_new", "disabled", 0.0);
					}
			}
		}
		program { name: "enable";
			signal: "elm,state,enabled";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "bg";
			target:  "bg2";
			target:  "bg3";
			after: "enable_text";
		}
		program { name: "enable_text";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.text", st, 30, vl);
				if (!strcmp(st, "disabled_visible"))
					{
						set_state(PART:"elm.text", "visible", 0.0);
						set_state(PART:"elm.text_new", "visible", 0.0);
					}
				else
					{
						set_state(PART:"elm.text", "default", 0.0);
						set_state(PART:"elm.text_new", "default", 0.0);
					}
			}
		}
		program { name: "label_set,animation,forward";
			signal: "elm,state,label_set,forward";
			source: "elm";
			after: "label_set,animation";
		}
		program { name: "label_set,animation,backward";
			signal: "elm,state,label_set,backward";
			source: "elm";
			after: "label_set,animation";
		}
		program { name: "label_set,animation";
			signal: "elm,state,label_set";
			source: "elm";
			action: STATE_SET "animation" 0.0;
			target: "elm.text.clipper";
			target: "elm.text_new.clipper";
			/* transition: LINEAR 0.2; */
			after: "label_set,animation,done";
		}
		program { name: "label_set,animation,done";
			action: SIGNAL_EMIT "elm,state,label_set,done" "elm";
		}
		program { name: "label,reset";
			signal: "elm,state,label,reset";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text.clipper";
			target: "elm.text_new.clipper";
		}
		program { name: "icon_set,animation,forward";
			signal: "elm,state,icon_set,forward";
			source: "elm";
			after: "icon_set,animation";
		}
		program { name: "icon_set,animation,backward";
			signal: "elm,state,icon_set,backward";
			source: "elm";
			after: "icon_set,animation";
		}
		program { name: "icon_set,animation";
			signal: "elm,state,icon_set";
			source: "elm";
			action: STATE_SET "animation" 0.0;
			target: "elm.icon.clipper";
			target: "elm.icon_new.clipper";
			/* transition: LINEAR 0.2; */
			after: "icon_set,animation,done";
		}
		program { name: "icon_set,animation,done";
			action: SIGNAL_EMIT "elm,state,icon_set,done" "elm";
		}
		program { name: "icon,reset";
			signal: "elm,state,icon,reset";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.icon.clipper";
			target: "elm.icon_new.clipper";
		}
		program { name: "st1";
         signal: "elm,text,hidden"; source: "elm";
         action: STATE_SET "notext" 0.0;
         script {
            new m = get_int(btmode);
            m &= ~LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "st2";
         signal: "elm,text,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "st3";
         signal: "elm,icon,hidden"; source: "elm";
         script {
           new m = get_int(btmode);
            m |= ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "st4";
         signal: "elm,icon,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "st5";
         signal: "elm,state,disabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "st6";
         signal: "elm,state,enabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
	}
#undef ICON
#undef LABEL
#undef MASK
#undef DISABLE
}

group { name: "elm/toolbar/item/item_horizontal";
	inherit: "elm/toolbar/item/default";
	parts.part { name: "elm.swallow.icon";
		description { state: "default" 0.0;
			align: 0.0 0.5;
			/* aspect: 1.0 1.0; */
			/* aspect_preference: BOTH; */
			fixed: 1 0;
			rel1.offset: 3 3;
			rel1.relative: 0 0;
			rel2.offset: -1 -4;
			rel2.relative: 0 1;
			rel2.to_y: "event"; /* FIXME how to unset rel.to: from inheritance? */
		}
	}
	parts.part { name: "elm.text";
		description { state: "default" 0.0;
			align: 1.0 0.5;
			text.min: 1 0;
			rel1.offset: 1 0;
			rel1.relative: 1.0 0.0;
			rel1.to_x: "elm.swallow.icon";
			text.align: 0 0.5;
			text.ellipsis: -1;
		}
		description { state: "selected" 0.0;
			inherit: "default" 0.0;
			TEXT_COLOR_SELECTED;
		}
		description { state: "visible" 0.0;
			inherit: "default" 0.0;
		}
		description { state: "disabled" 0.0;
			inherit: "default" 0.0;
			color: 0 0 0 128;
			color3: 0 0 0 0;
		}
		description { state: "disabled_visible" 0.0;
			inherit: "default" 0.0;
			color: 0 0 0 128;
			color3: 0 0 0 0;
		}
	}
}

// === item: style assumed to exist
// XXX: vert vs horiz (should emit)
// XXX: seriously... why do we have this style?
group { name: "elm/toolbar/item/item_centered";
   inherit: "elm/toolbar/item/default";
   parts {
   }
}

group { name: "elm/toolbar/separator/default";
	images {
		image: "images/elm/toolbar_separator_v.png" COMP;
	}
	parts {
		part { name: "separator"; // separator group
			description { state: "default" 0.0;
				min: 2 2;
				max: 2 9999;
				rel1.offset: 4 4;
				rel2.offset: -5 -5;
				image {
					normal: "images/elm/toolbar_separator_v.png";
				}
				fill {
					smooth: 0;
				}
			}
		}
	}
}

group { name: "elm/toolbar/object/default";

   parts {
      part { name: "elm.swallow.object"; type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
         }
      }
   }
}

// === item: the more PANEL that slides out under the toolbar
// XXX: vert vs horiz (should emit)
group { name: "elm/toolbar/more/default";
   parts {
      part { name: "shadow"; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.offset: -16 -14;
            rel1.to: "base";
            rel2.offset: 14 16;
            rel2.to: "base";
            image {
					normal: "images/elm/comp-sh1.png";
					border: 18 18 18 18;
					middle: 0;
			}
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "open" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "open2" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "base";
         description { state: "default" 0.0;
            image {
					normal: "images/menu_im0.png";
					border: 1 1 1 1;
					middle: 0;
			}
            rel2.relative: 1.0 0.0;
            rel1.offset: 2 2;
            rel2.offset: -3 1;
            fill.smooth: 0;
            fixed: 1 1;
            visible: 0;
            color_class: "dialog_base";
         }
         description { state: "open" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 1.0 1.0;
            rel2.offset: -3 -3;
            visible: 1;
         }
         description { state: "open2" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 1.0 2.0;
            rel2.offset: -3 -3;
            visible: 1;
         }
      }
      part {  name: "gradient";
			description {state: "default" 0.0;
				image.normal: "images/dialog_im0.png";
				color_class: "dialog_base";
				rel1.to: "base";
				rel2.to: "base";
				rel1.offset: 1 1;
				rel2.offset: -2  -2;
			}
      }
      part {
			name: "gradient2";
			type: RECT;
			description {
				state: "default" 0.0;
				rel1.to: "gradient";
				rel2.to: "gradient";
				color: 0 0 0 20;
			}
		}
      part { name: "clipper"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            fixed: 1 1;
            visible: 0;
         }
         description { state: "open" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 1.0 1.0;
            visible: 1;
         }
         description { state: "open2" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 1.0 0.5;
            visible: 1;
         }
      }
      part { name: "clipper2"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.5;
            rel1.to: "base";
            rel2.to: "base";
            fixed: 1 1;
            visible: 0;
         }
         description { state: "open" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 1.0;
            visible: 1;
         }
         description { state: "open2" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 0.5;
            visible: 1;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "clipper";
            rel2.to: "clipper";
         }
      }
      part { name: "elm.swallow.content2"; type: SWALLOW;
         clip_to: "clipper2";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "clipper2";
            rel2.to: "clipper2";
         }
      }
  }
  programs {
     program {
        signal: "elm,state,open"; source: "elm";
        action: STATE_SET "open" 0.0;
        target: "shadow";
        target: "base";
        target: "clipper";
        target: "clipper2";
        transition: DECELERATE 0.15;
     }
     program {
        signal: "elm,state,open2"; source: "elm";
        action: STATE_SET "open2" 0.0;
        target: "shadow";
        target: "base";
        target: "clipper";
        target: "clipper2";
        transition: DECELERATE 0.3;
     }
     program {
        signal: "elm,state,close"; source: "elm";
        action: STATE_SET "default" 0.0;
        target: "shadow";
        target: "base";
        transition: DECELERATE 0.5;
     }
  }
}
